// <auto-generated />
using System;
using FanaticsDemoAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FanaticsDemoAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250817223654_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FanaticsDemoAPI.Models.MaintenanceEvent", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OffsetPrinterPrinterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Technician")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.HasIndex("OffsetPrinterPrinterId");

                    b.ToTable("MaintenanceEvents");
                });

            modelBuilder.Entity("FanaticsDemoAPI.Models.OffsetPrinter", b =>
                {
                    b.Property<string>("PrinterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Downtime")
                        .HasColumnType("time");

                    b.Property<double>("EnergyConsumptionKWh")
                        .HasColumnType("float");

                    b.Property<string>("InkType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("InkUsageLiters")
                        .HasColumnType("float");

                    b.Property<DateTime?>("JobEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JobStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaperType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaperWasteKg")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPagesPrinted")
                        .HasColumnType("int");

                    b.HasKey("PrinterId");

                    b.ToTable("OffsetPrinters");
                });

            modelBuilder.Entity("FanaticsDemoAPI.Models.PrinterError", b =>
                {
                    b.Property<string>("ErrorCodeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OffsetPrinterPrinterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ErrorCodeId");

                    b.HasIndex("OffsetPrinterPrinterId");

                    b.ToTable("PrinterErrors");
                });

            modelBuilder.Entity("FanaticsDemoAPI.Models.MaintenanceEvent", b =>
                {
                    b.HasOne("FanaticsDemoAPI.Models.OffsetPrinter", null)
                        .WithMany("MaintenanceEvents")
                        .HasForeignKey("OffsetPrinterPrinterId");
                });

            modelBuilder.Entity("FanaticsDemoAPI.Models.PrinterError", b =>
                {
                    b.HasOne("FanaticsDemoAPI.Models.OffsetPrinter", null)
                        .WithMany("Errors")
                        .HasForeignKey("OffsetPrinterPrinterId");
                });

            modelBuilder.Entity("FanaticsDemoAPI.Models.OffsetPrinter", b =>
                {
                    b.Navigation("Errors");

                    b.Navigation("MaintenanceEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
